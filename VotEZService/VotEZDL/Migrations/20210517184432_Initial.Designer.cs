// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VotEZDL;

namespace VotEZDL.Migrations
{
    [DbContext(typeof(VotEZDBContext))]
    [Migration("20210517184432_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VotEZModels.Poll", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateToClose")
                        .HasColumnType("datetime2");

                    b.Property<int>("PollChoiceID")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PollChoiceID")
                        .IsUnique();

                    b.HasIndex("UserID");

                    b.ToTable("Poll");
                });

            modelBuilder.Entity("VotEZModels.PollChoice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Option1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Option3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PollChoices");
                });

            modelBuilder.Entity("VotEZModels.PollVote", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Choice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PollChoiceID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PollChoiceID");

                    b.HasIndex("UserID");

                    b.ToTable("PollVote");
                });

            modelBuilder.Entity("VotEZModels.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VotEZModels.Poll", b =>
                {
                    b.HasOne("VotEZModels.PollChoice", null)
                        .WithOne("Poll")
                        .HasForeignKey("VotEZModels.Poll", "PollChoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VotEZModels.User", "User")
                        .WithMany("Poll")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("VotEZModels.PollVote", b =>
                {
                    b.HasOne("VotEZModels.PollChoice", "PollChoice")
                        .WithMany("PollVote")
                        .HasForeignKey("PollChoiceID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VotEZModels.User", "User")
                        .WithMany("PollVote")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("PollChoice");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VotEZModels.PollChoice", b =>
                {
                    b.Navigation("Poll");

                    b.Navigation("PollVote");
                });

            modelBuilder.Entity("VotEZModels.User", b =>
                {
                    b.Navigation("Poll");

                    b.Navigation("PollVote");
                });
#pragma warning restore 612, 618
        }
    }
}
